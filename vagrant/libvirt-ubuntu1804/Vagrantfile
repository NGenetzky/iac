# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# References:
# - https://www.alextomkins.com/2016/09/testing-cloud-init-with-vagrant/
# - https://www.vagrantup.com/docs/vagrantfile/machine_settings.html
# - https://github.com/debops/debops/blob/master/Vagrantfile

$sh_0_cloud_init = <<-'SCRIPT'
set -o nounset -o pipefail -o errexit

DEBIAN_FRONTEND=noninteractive apt-get -y \
  install --no-install-recommends \
    cloud-init

cloud-init init
cloud-init modules

SCRIPT

DEFAULT_BASE_BOX = 'generic/ubuntu1804'
# PROJECT_NAME = 'vagrant-' + File.basename(Dir.getwd)

# NOTE: Absolute path must be used.
CLOUD_CONFIG_PATH = File.join(File.dirname(__FILE__), "nocloud.iso")


VAGRANTFILE_API_VERSION = 2
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # NOTE: Using 'generic/*' because 'Roboxes.org' provides 'libvirt' box.
  config.vm.box = "generic/ubuntu1804"
  config.vm.box_version = ">= 2.0, <=3.0"
  config.vm.guest = :debian

  # Create a private network, which allows host-only access to the machine.
  # config.vm.network "private_network", ip: "192.168.33.10"
  config.vm.network "private_network", type: "dhcp"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # A range of ports Vagrant can use for handling port collisions and such.
  # Defaults to 2200..2250.
  # config.vm.usable_port_range = 2200..2250

  ################################################################################

  # Disable shared folders
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "/tmp", "/vagrant_data"

  # Defaults to nil. If nil, Vagrant will not manage the hostname.
  # config.vm.hostname = nil

  config.ssh.password = nil # Disable SSH password
  # config.ssh.private_key_path = File.expand_path("~/.ssh/id_rsa")
  # config.ssh.insert_key = false


  ################################################################################
  # vm.provider "libvirt"
  # - https://github.com/vagrant-libvirt/vagrant-libvirt/blob/master/README.md
  config.vm.provider "libvirt" do |lv|
    lv.random_hostname = true

    lv.storage :file, :device => :cdrom, :path => CLOUD_CONFIG_PATH

  end

  ################################################################################
  # vm.provision

  # keep_color: true means stdout/stderr won't be green/red by default.
  config.vm.provision "shell", inline: $sh_0_cloud_init, keep_color: true

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "playbook.yml"
  end

  ################################################################################

  # A message to show after vagrant up.
  config.vm.post_up_message = "Time to party!"
end
